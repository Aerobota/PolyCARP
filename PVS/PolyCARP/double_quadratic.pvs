double_quadratic: THEORY
%----------------------------------------------------------------------------
%
%  double quadratic polynomials in two variables,
%  with positive leading coefficients in each
%
%----------------------------------------------------------------------------
BEGIN

  IMPORTING quad_minmax

  a,b   : VAR posreal
  c,d,ee,f: VAR real
  x,y  : VAR real
  xl,xu,t,yl,yu,
  v,w: VAR real
  epsil: VAR posreal
  D,ap: VAR posreal


quad(a,b,c,d,ee,f)(x,y): real =
  a*sq(x)+b*sq(y)+c*x*y+d*x+ee*y+f

quad_to_x: LEMMA
  quad(a,b,c,d,ee,f)(x,y) =
  quadratic(a,c*y+d,quadratic(b,ee,f)(y))(x)

quad_to_y: LEMMA
  quad(a,b,c,d,ee,f)(x,y) =
  quadratic(b,c*x+ee,quadratic(a,d,f)(x))(y)

rev_disc(a,b,c): real = sq(c)-4*a*b

rev_disc_sym: LEMMA rev_disc(a,b,c)=rev_disc(b,a,c)

double_quad_simple_min: LEMMA
  c=0 IMPLIES
  quad(a,b,c,d,ee,f)(x,y)>=quad(a,b,c,d,ee,f)(-d/(2*a),-ee/(2*b))

quad_min_y_to_x(a,c,d,y): real = -(c*y+d)/(2*a)

quad_min_y_to_x_def: LEMMA
  quad(a,b,c,d,ee,f)(x,y)>=
  quad(a,b,c,d,ee,f)(quad_min_y_to_x(a,c,d,y),y)

quad_min_y_to_x_dec: LEMMA
  x<=xu AND xu<=quad_min_y_to_x(a,c,d,y) IMPLIES
  quad(a,b,c,d,ee,f)(x,y)>=
  quad(a,b,c,d,ee,f)(xu,y)

quad_min_y_to_x_inc: LEMMA
  x>=xl AND xl>=quad_min_y_to_x(a,c,d,y) IMPLIES
  quad(a,b,c,d,ee,f)(x,y)>=
  quad(a,b,c,d,ee,f)(xl,y)

quad_min_y_to_x_eq: LEMMA
  quad(a,b,c,d,ee,f)(quad_min_y_to_x(a,c,d,y),y) =
  quadratic(b-sq(c)/(4*a),ee-c*d/(2*a),f-sq(d)/(4*a))(y)

quad_min_y(a,b,c,d,ee): real =
  IF rev_disc(a,b,c)=0 THEN 0
  ELSE (2*a*ee-c*d)/rev_disc(a,b,c) ENDIF

quad_min_y_min: LEMMA rev_disc(a,b,c)<0 IMPLIES
  quadratic(b-sq(c)/(4*a),ee-c*d/(2*a),f-sq(d)/(4*a))(y)>=
  quadratic(b-sq(c)/(4*a),ee-c*d/(2*a),f-sq(d)/(4*a))(quad_min_y(a,b,c,d,ee))

quad_min_x(a,b,c,d,ee): real =
  IF rev_disc(a,b,c)=0 THEN 0 ELSE
    (2*b*d-c*ee)/rev_disc(a,b,c) ENDIF

quad_min_x_def: LEMMA rev_disc(a,b,c)<0 IMPLIES
  quad_min_x(a,b,c,d,ee)=
  quad_min_y_to_x(a,c,d,quad_min_y(a,b,c,d,ee))

quad_min_x_y_def: LEMMA rev_disc(a,b,c)<0 IMPLIES
  quad(a,b,c,d,ee,f)(x,y)>=
  quad(a,b,c,d,ee,f)(quad_min_x(a,b,c,d,ee),quad_min_y(a,b,c,d,ee))

quad_translate_t: LEMMA 
  quad(a,b,c,d,ee,f)(x+t*v,y+t*w)=
          quadratic(a*sq(v)+b*sq(w)+c*v*w,
	  2*a*v*x+2*b*w*y+c*v*y+c*w*x+d*v+ee*w,
	  a*x*x+b*y*y+c*x*y+d*x+ee*y+f)(t)

quad_min_x_y_linear_min: LEMMA rev_disc(a,b,c)<0 AND
  x=quad_min_x(a,b,c,d,ee) AND y=quad_min_y(a,b,c,d,ee)
  IMPLIES
  2*a*v*x+2*b*w*y+c*v*y+c*w*x+d*v+ee*w = 0

quad_min_x_y_up: LEMMA (w/=0 OR v/=0) AND
  rev_disc(a,b,c)<0 
  IMPLIES
  a*sq(v)+b*sq(w)+c*v*w>0

quad_min_unit_box_init(a,b,c,d,ee,f,D): bool =
  quad_min_le_D_int(a,c*1+d,quadratic(b,ee,f)(1),0,1,D) OR
  quad_min_le_D_int(a,d,f,0,1,D) OR
  quad_min_le_D_int(b,c*1+ee,quadratic(a,d,f)(1),0,1,D) OR
  quad_min_le_D_int(b,ee,f,0,1,D) OR
  (LET mx = quad_min_x(a,b,c,d,ee),
       my = quad_min_y(a,b,c,d,ee)
   IN (0<=mx AND mx<=1 AND 0<=my AND my<=1 AND
       quad(a,b,c,d,ee,f)(mx,my)<D))

quad_min_unit_box_init_def: LEMMA rev_disc(a,b,c)<0 IMPLIES
  (quad_min_unit_box_init(a,b,c,d,ee,f,D) IFF
  (EXISTS (x,y): 0<=x AND x<=1 AND 0<=y AND y<=1
  	  	 AND quad(a,b,c,d,ee,f)(x,y)<D))

quad_min_unit_box(a,b,c,d,ee,f,D): bool =
  quad_min_le_D_int(a,c*1+d,quadratic(b,ee,f)(1),0,1,D) OR
  quad_min_le_D_int(a,d,f,0,1,D) OR
  quad_min_le_D_int(b,c*1+ee,quadratic(a,d,f)(1),0,1,D) OR
  quad_min_le_D_int(b,ee,f,0,1,D) OR
  (rev_disc(a,b,c)<0 AND
   LET mx = (2*b*d-c*ee),
       my = (2*a*ee-c*d)
   IN (0<=mx*rev_disc(a,b,c) AND mx*rev_disc(a,b,c)<=rev_disc(a,b,c)^2 AND 
       0<=my*rev_disc(a,b,c) AND my*rev_disc(a,b,c)<=rev_disc(a,b,c)^2 AND
       quad(a,b,c,d*rev_disc(a,b,c),ee*rev_disc(a,b,c),f*rev_disc(a,b,c)^2)(mx,my)<D*rev_disc(a,b,c)^2))

quad_min_unit_box_def_lt: LEMMA rev_disc(a,b,c)<0 IMPLIES
  (quad_min_unit_box(a,b,c,d,ee,f,D) IFF
  (EXISTS (x,y): 0<=x AND x<=1 AND 0<=y AND y<=1
  	  	 AND quad(a,b,c,d,ee,f)(x,y)<D))

quad_min_unit_box_def_eq: LEMMA rev_disc(a,b,c)=0
  AND 2*ee*a=c*d IMPLIES
  ((EXISTS (x,y): 0<=x AND x<=1 AND 0<=y AND y<=1
  	  	 AND quad(a,b,c,d,ee,f)(x,y)<D) IFF
  quad_min_unit_box(a,b,c,d,ee,f,D))

END double_quadratic
